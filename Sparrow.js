/*참새를 정의한다
과거에 정의된 클래스를 재사용할 수 있을까?  yes!!
객체지향 언어에서 가장 중요시여기는 상속이라는 개념을 
이용하면, 과거에 작성한 클래스 코드를 중복정의하지 않고 
또 사용할 수 있다. = 재사용 
재사용은 왜 중요한가? 개발시간 단축 = 비용저렴

A extends B 라고 선언하면, A는 B의 자식이 되며
부모인 B의 모든 재산을 다 사용할 수 있다. 접근할수
있다..
*/
class Sparrow extends Bird{
		/*참새는 새의 자식이다...
		java,c# 등등의 객체지향 언어에서는 부모 클래스를 
		parent 라는 용어를 쓰지 않는다.. super라 한다
		자식을 child 용어를 쓰지 않는다...sub 클래스
		*/
	constructor(){
		//객체지향 언어에서는 자식을 초기화 하기 전에
		//반드시 부모가 먼저 초기화 되어 있어야 한다.
		//따라서 생성자의 첫줄에 super() 명시되어야 한다
		super();//부모의 constructor()
		this.color="brown";
	}
	//자식이 부모의 메서드를 재정의할수 있도록 허용해준다
	//즉메서드명을 중복정의정의하는 기법이 허용된다..
	//부모가 물려진 기능을 현 시점에 그대로 사용하기엔 무리
	//가 있거나 ,상화에 맞지 않는 경우 자식은 해당 메서드를
	//업그레이드 할수 있는데, 이럴때 부모의 메서드를 재정의
	//할수 있고, 이러한 메서드 중복정의 기법을 오버라이드
	//라 한다..Override
	fly(){
		console.log("낮게 날라다닌다");
	}
}